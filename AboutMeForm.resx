<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxISEhISEhIVFRUVFRUVFRUVFRUVFRUVFRUXFhUVFRUY
        HSggGBolHRUVITEhJSkrLi4uFx8zODMtNygtLiv/2wBDAQoKCg4NDhoQEBotJR8lLS0tLS0rLS0tLS0t
        LS0tLS0tLS0tLS0tLS0uLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS3/wAARCAC3ARMDASIAAhEBAxEB/8QA
        HAAAAgMBAQEBAAAAAAAAAAAAAwQAAgUGAQcI/8QAORAAAQMCBAQEBAUEAQUBAAAAAQACEQMhBBIxQQVR
        YXEGIoGRE6HB8DJCUrHRBxTh8WIVQ4KisjP/xAAZAQADAQEBAAAAAAAAAAAAAAABAgMEAAX/xAAqEQAD
        AAEEAQMCBgMAAAAAAAAAAQIRAxIhMQQTQVEUIjJCYXGR8IGh0f/aAAwDAQACEQMRAD8A0abEwwIFNyYY
        vKcnvKmGYmKaXaEdgS7EHeNU01SCTpJyikcHbhqmEdoQqYTDQuwQtl2hEaFVoRWhHBCmWaERrVVoTFNq
        pMZI08HgYoWJgNXjmrR6PBHeKkKhRqgQis9LDKyyhQyrlUcgUQNyE8IrkJyBWQTghkIjlQoYLIo4IZRH
        IZTYKI8KqQrFVJXHZKOCoQrOVSuOKOahuaiFUcmwDIFzUJ7UdyE5DB2RdwQHhMPQHlccLFqisVERQVMp
        lhSrEwwJ2jkxljkxTKWYEwxDA2RukU7RSFJO0XKbCPU0ZqXplHaVxGkHaiNQmojSuIMMxMUilWlFY5Uh
        4ZG0OAqOKCHrxz1p9RYI7TyoUEq7ihkrNXLLSipQ3K5VClwUQNyE5FchOXOSsgnBDIRHFUJQUlkyjghF
        EcUMlFpjpoqVQlXchuXHHhKo4qOKG5ccRzlRzlHFCcUQHrnITio4obiuOPHID1dzkFzkcCtlSoql6iOA
        ZKMTDEBiOxUwKmHYUwwpdiMxDAyoaYmaRSTCmKb1NyOqNGkUywpGlUTVNyTAtDLSitKA0ojSuwRpBmlX
        BQQVcFEm0GDlMyFKkphNpclVJXkrwlHAUiEqjioSqOK7A6PHFCcV65yWxFcNBJMINYKzyXeVzfifxTTw
        mVgHxKrwS1gdlAaLF9R0HK2baEk+qxPFXiR7QWMPmMgRsI1Xz6i8lvxXPLn1a7aZcbkNabA9/wCEsWq6
        KXG3s+0cI4mMRRZVjKTIc2ZyuBggGBI3BgWIsFTinGsPhhmr1mUxtmNz2GpXz7B4t4ZkpVCwg7WDs1ok
        aGw05qvhbww2riTVry/IQ4NcS4SNCSTe/wCx6KkUq7EpOej6d8SVUuVCqkqmxCeoyxKo4qpcqlyDgKsj
        ihuViVQlDaHcDchORHIbl2A5BPQXIrkJ6GDsgiooVF2DskY5MMck2o7Vo2mfcNscjNKSa5GY5dsCtQdY
        jsSVN6YY9I5KK0O0ym6blnsemab1JofKH2ORWuSjHozXJcAGQ5WBQGuVw5dgVoLK9lCzKZkcCYCyvC5D
        LlUuTYOLkqjiqF6o5yODiteqGgk6LhvEXGZdAMgaDRbPifigY3KDcr53i62YmZ9RKwa+rurYjfo6e2dz
        7YvxCvnqDfukK9Uxkcw6yCBv93Wh/a5u3UT+yu+i0ANblJ7uzR0vJ7J9KQalfJnYb4jRcm5mTE+saBdN
        wDiwZVF7SAbzY7LmeJYOqZOa9u9jpfTVZ/D61SnVyVZ0kHkJIgjncrTM56M7eD7nnCo4oGFqscxjqZlh
        AynW38r1xWpSZXWCxKqShlyqXo7AKy5Ko5yGXqhel2DeoXc5Cc5eF6o56GwbeRxQXuXpehPcg5DuPC5R
        CJUQ2nbgzEYKjGozWp96F2M8CI1QU0RrE+9CbGWajMKo1qI1qGUFJh2FHY5LNCK1K0mMm0NsqI7KiTai
        F4AkkAczZI5Q6pjzaiuHrn8R4hoMmHZiP0xHuVm1vF50bTAP/I37kKTqUOppnafEU+Ivm+J8VVTMOj5H
        0ssyvx+q4jzk+s+iXe/ZDbJ92fVK+Opt/E8D1+ixsb4ppt/DfuvnNXibyYnXWNQln4sHUg9iTbqSFK71
        H1wUmdNfqdji/F9T8pAVW+L6xaZa3TWL/JcQ6tP+0xhYdef8+qh9+fxMrmfhfwF4hxRz3EuukadUTcD5
        fReYkQT9CqU3wevdCYU9DO3XZrYZ7SLzHsf3svW4IZ5aBlM6ibjaef30SVG+p9vu5WmzEBrczhLWOayN
        yXPaHE9pPqF6HhtN4aMflTxk0qdEsYTkBnZnLmMx19lxnH8G51XMweUiSLte07gg/Ir6P4fwgIzFoiCY
        I3XvEfDGGrElzXAncOJI6tzSAdrLdSlPoxZeOzivB3GsRQq06Dqbn06r8oDROTQmpJ0ESSOTSvpLkrw/
        htOg3LTHdxu49zy6CyOSh+wMlXITkRyE4rgA3FDcVdzkFzk2AZPHOQ3PXrnIL3IYDuI56G6oquQHoORl
        QU1FEqXKJdgd5tsKMxyUpvR2FZ3BpVobaitCBTKO0pcMZNBWhFa1CaUZhQ5DwehiIGqNK47xF4i+IfhU
        ZyT5nD8+0Dk3r9Ecs7E+5q8X8T06VmQ46T+UHvuuOxfFK1cw4mHXnYDoNCdtN1em7NLbHnmJv2CVDXA5
        YvqCdGjmQill8iOvjg9ZXmADDhEAXDehNr9Lqhrk2Mvto1sf/Wu6BUeSC20WAaDl/wDInWTyCL8MWAMC
        0+be1z/nWUXKQqbZSnWlpAJB5GZ+W6j5/CM1rkZvxE/qE/JEfTmQSHWsC4n3M3J5KOE3giBoNzoIP+VN
        sdIXYHGALRYw2J+cgL1zuRLo62noBqivbmmdBFifJfnz/Yq5F4J0EmBqTa/3sp0UQp8Mm7v9JrDsi499
        fZeilIv6dDz7r2qcotrFuQUKfJZIQxx80z0+9kOnSiOv7KEy7Lqfr9kpprZi2mqL6CkFovg27n0n+Fpc
        O4cXVDuHxbaQANO8+yzZAPXf1C7DwwwZA935ZnvK0+HxZDyuZOgp08jGtHJDdUXoxGZVeF6ainyedTSB
        YmvAsstmMcTotQUC46J2lwsbi6rEJfiEptr7TIZUJVnkrZHDAqVOGptkfImb+DCc5V+GStYcJumqeAA2
        SVMrpjwqrs5ypRcEBzHcl1VXDN5KrMK0jRTyi3pHL4Wg55iE2eDO9FtYak1rk3VrtU6TzwVmJxyc3/0b
        ofYqLoRVCi7FB2wck1yOx6Rp1hCK2otU+I32YH5KQ+2rCNTxKy6rylH4khdXhpHT5TZ0rcUEanXXHNxp
        nVamFxJiSo/TZLfUYFP6h+IDSpsoMMGtOYgkHINvU27ArlKFYtE7u3n01kGLLK8R8S+PiXl1hMNvsLD7
        6o+ArgmH6aBxv92WapS6Lbm+zVwtdzqrGB34jZ1jYC8CE7jKTvMS63eDy6LEwOIbTeKmwcbCASDJ1XR4
        t7XskZZvuNlFLDHbyjN+FYwAAAYteRqbjodlSkcsTzv33IB2kgfyjV2QHHcgaHrJJsgtoy0uFpIAmT5T
        fN31+5KellAl4Yw2mLu0zQLXMKxDCYbe8fLUnkgU6k3N9o5dY5wi/FDek/sslPBrlFyzsbzEWlDe3Qk7
        7c+aqa9/YDp9wqfHED1SNjpFxUuq4qoIKTfXjTUodOrJvvp/KTDKZSDYOlcnnKac7KJA+/uPdKHEAEAX
        P0+/3WxwnhzqxFjBNyqTLfCROqS5PeDcLdVdO0367Fdm3DtY0U2+vdWw+GFJoawbXKo1jpXueP4Wycvs
        8jW81OsIcwuFaFpUcO0rPphyZw73ASRI+Y/lWrTa9yc6sv2NBmHaER+naCB2vCWZVkSDKmeFJw2WVpew
        0Hg3GihhZra8HLtq3tuPQ/IjkrtxM7/fVBabC9RDhS+IMIZroNasm9Ni+ogdVxQG1TovfjIFarBR2Heo
        VdVIKA6sZV61YapJ2IGYzYc120G8021VFmNxfQnqASPcBRE7cc/RqI7K618NwxqdZw5nILZ6mDB6LfJz
        j6riLJYseV1z8LTA0CSqUW7LparsFTU9GHRw6F4ix3w6BaLOfYRrG63HUCNlxPivFH4sAzlEEd/3Q8jU
        Uabx7nePFXqLPsc40NqWcCHbbX5lPYCgQMrhpo49PpuvaVdrrPb5rbbdFdnkbEEgH35GOS8Q9cHjakA3
        EHlsTYrY4YPIwOMCBPU7LBxFMNcDVIDCSQIkkDkFpM4iHOLmNhp/CNYGw6mFLUW1ZK6f3ZRr4iobWEc9
        +W57+yEyoIcJ2ht+W3a3ySlTGAiJiNpStGu9z8lMEucbAak7QmhuhLSk2MHQL3imxsk9rd47LscN4Lpk
        eZ1+aD4Y4QcMyXiajuV8o2aD96LpadQgXOXvr7LZp+HLWaXJnry3LxPRhN8B0t3n07z/AIRqPhXC07OE
        9XdNbrVrcUawX9z/AAsHGcYe42Bj5ewVZ8GfZIR+e/d/waY4VhxdtNttCADtC+J494GIqtBIAe4AGxsd
        IlfTxxNxfBYbWkCxC+QY95OIqmSfO651sd1DVhxWGsFZ1FcZTzydBwHDPrYhlNmrjc7Bv5negavsmGwj
        GNDWiALL51/TShHxa5bMQy0S1urnRvtovplGkbSRBuDsQdFXScRy+ydzd8LoLSpiEGoACnqeGA3vNxaV
        MSxotkPeRI9Fb10S+nr3FqZCrXqlt8pjf6FEPFC0wGERrLS0EfqCOCXNMvaGnc316oPU+Rp0vjkRlx8z
        Wmdxpm79eRQ6+I080cpjtBCbpUcwh1cyLGC1unzuh/8AS6cNqFsiAXZi4kSPxRzG45doK+pHz/ob079l
        /LMbE8Wa3qRcRoT9JvzTuFxArCWtJ20II6TsttmFptHlDRb8rRdDp4amZLZMmTeIO4t1m3MlK9WfYadG
        vcxcUXsBIIsJgxPsNfSPVRvxHDyw60/hPsJI/hbVahpEN65QT6HZLDCv3rGIAgNaDY65u0bLlq5D6LMQ
        YapJcXho/wC4HZQW8iNpiNZkQqMBcYayo9s69I/Wdfn3XQNpMbsCeZu73XlTEIq2B6S+TNHCzFx6E/Ix
        M+kL3A8NFMknJ08oJb0DnS6Lc0xVxJSlXEH/AGioquznUSPFw5/sosZ1f/l+yib6d/Iv1K+BdlZ0INTG
        uG6NVPJI1aRK2xjHJ5+plPgrUxjjYFMYNj5uF5gcDeSukw9BoCWrUsaNN2uzLrtLWOcZsCV8kx5qOquI
        1cSbm0dea+peN8Z8PDuDfzHLytv/AKXy55Jc2BO3osPlXuwjZ4+moyHo0pg2JOp5dOyaw+EzPc0Hlefv
        mhWEZoEkTf0Ccw2Fc17ctw8iRpaQNdtlhSyazH8R4SoMjanl8oLZm7dyPWVnMxYADRPK253X0jxvwsvw
        eHqvEPpl9O7b+YS0zGgLTrz9+A8GYxlLH0HYn8DKgzzEC0Bx6A5SegVGucCN7Wb/AAfwBjsQG1CPg03Q
        ZfJfl2Iptv6GF9M8PeEMPg2y053kXqOIJIOzQLNGmnrK6R1Q7WGs9OcrNc5uYEEkOMHK1zoOzrDc29R6
        6dOJnlkbbfCRSvUAs3mkq7TsFo4jCaRMjc+h9bTsiU8NrncL2EW23laVrwujM/Htvk5zEYQkiTvf/Su7
        DjWLczay6Wph6Tb5Z76f5QzXz03MygZmuacotcEa+qP1nwgfQ/LMWnwuodKZjmbfMr4dxdg/ua4G1V/X
        8xn2X6SpYnM052RGgBzTaxjRfn7jtCK9Ty+c1XeUDzam0c9Fh1tR6momzbp6S09LC+T67/T/AIUyngKB
        k5qjTVcAN3mR/wCuULpBTytytEDrv/joua8KcRxHwKDHsZSYykxgL82Y5WgBxaQACY0Lt9F1bKrIBset
        vkuqsdlInPQDCuLbAOPqYCtWY+oIuB3iUU4tvMeir/djmuTftJzhdVRn1eHNAh7oA55oH0Qg2mWiSXAW
        hujhzjbsma1Km8y8l3T8s9rSiCu1ogADoNlVbn+/6cEtsJ/p++T3B0GtA8s8i4SfnomviT9/RIvxfIIb
        sSUHo1XLGWrE8IfzNA2EW2sEN+I6LNrYuNXAfukavEJ0BPVx+irHjNkr8uZNl2K+/wDSWq8TaN1h1sW5
        26WcDyK0T4k+5kvzq/KbNXivKfYJOrxTp81nljkJ9NWWhC4wQrydR85Gq3GCJ/D80lU4iI1HUAIbqQ5e
        6E6h0CPpr2F9an2XHEG8j9+qiD/b9AvV21/IN/6GpSqtLi067EG9vsIrWvEyQ69trbSkP72nUqMdlMNk
        E6Hlb72Wu1pdGTzi/eO+iw7sex6W1V75BYXF5f8A9LHtA1stilUtPb5pWtw9pa3PDLg+Y+4hHFMRFJhA
        kSSAGmDNhrtqEu99jqEuDkP6jyfhtGx30k9NyuOwoF59F339SqeanRcGBriZMXMdT3K4KhSPssurWaKq
        dqBtBcS3W8Cd7j+V1fhjhpdUY0gg7WJBEbjbtcddlyBpPNQFomTodOi+qeD6tJtCmS7M8jMNSWtcJDXH
        SYOhOyWZ5GTOp4lhadai6jUmCPUEaH0IX5+4/wAIIqF7PNlOQw0ySD+nX0X3OtjASCJ5CZaL9DrouS8T
        NNV4LQJAIJAh1xAvv9EcZZ1/hyzI8L/1JOGof2+LpVHGmG/DIAD8n6Hh5FgNDy7Suz4P41pYxrvg5mua
        ASxwu2TYh2huNlxmB8Hvq2cQWCwBaDln9JOn7c12HhzgtHBAhpILom9jHIep0hM1t7/gGm6pcdfIYYus
        57HAPgZpZcXOtzrBmLAXKfNaqSPK2epMgcyFKeKlzoaRyJt3t1+gVKlhIdrqTE+4S3bXSwVjST7ZpCoI
        uRKXZVa2ZI/ysrFVsgET7ys6vxLNbT6+qni2V+yUdE1wEnM4ze7jz2GgS9SjTBLmtaCbyAJ91z7eIOiO
        Wh5hP4KsXi5WrxtLNZbMfla62YSHJAvH8qprcz9F5kK9+EDqvS2pHku6Z4Kx7K2YndDNKNCeymR3dDOD
        uWHYY1PojNe3aUg2rGoITNLEB0RCSmi+lnoI+r0+aE8Od+r0EfMpvJpcX5IjSBZ1lP1Uuivo1XbM0YHp
        85UOB6FaQqtHVVqY2NG+6Pq2+kD0NNdszxgHcgo7hzuYCO/E1Dyak8VnP5026/doXZprpMh4dcgkbIb8
        E1s5nAQJ1QamGqNh35d5kmOyZbg80E9xb5pXbX5grTl/lA0KFN5OU6dLf5XpwjW/ib6gSD/CKcOZINj0
        t6qjqrhZx7H+Um+31RRaemu5FHNdPloyNiXtB9l4mhTZzXiO+vkX0o+DNFejScBTpGo4gATmInoN/ZdG
        zGFlPPVhlvwt26d0gcY6zabc7t7hrW9yLekqwY6JqOHQN8o9Xan0SNJ4yv8ApWW5zh/6wl/0Ud4il3kp
        Zj6uKf4dj3PqAvcGycuTMBADSZgdRvzWRiqlK+eoTybTAaPfdO8NxNMNinSIkSd7aZnO15x2KfUUqeF/
        f8k9OqdfdX9/wM+I206rMupE6DuDf3XDVOHxZrfdb1fitKvVqUQ4l9ImQ0uAg+UEmYdBd2uOSJ8G4Dtd
        r6jn/KnpaU0s0Nr6tJ4k56hw8zO+i6fh5ytayNNBsB9fVCNEAj1+/wB07h2Qq1oQ1hInpeRcvORmqSBo
        AlqNATdMmmXK4oAaoaejMzgbW8irrPsj1tUgw2Ijtf8AfkiYcEXcZJ6QB0CTq1QNEI4g81SfFWCdea8m
        4HN3QsQGRr81iPrnmVT4nVCvGSDPmU+yYvEZDEyFh4urmMtstHE+ZZ5pLHeg92EaVr5QNuII1W1wnHNG
        v+1hVad1aiSEizDOyqR2I4hT3TVGtSIsVxZxJ3XtHFkEBpWnT1svDZG9NJZSOyq1KY3Q6VdmmZYbqjou
        JWdi68XEhabjCzkyxqZeMHa52RcpbE5IkQDzGq5WnizH4lf+7KRzkorRvMrVD+B4t+oKYrEVRs084P8A
        KysNioOq1m4hhGgJSPTpdFVqqgVPibJh0tMDW61GPY4Ai4PNY+PE3AaEvQxbjIzBTzWcZKcLlnV0aTYE
        AHqUDHMkZQPayxKPFnts5yJiOLgpdlt8j+rppcMK2k8AkmwtEkyORRPgsf5g8hwtqbdlzGN4w9p8sx8k
        Cjx54dpASvKfIZuWjrsRhWugh5kaX3SGMrZYzAnaBueayX8efIAG+qaxGJLxOcA7K2nO5cMnqWp7QQ1K
        PI+5UWfnnVzVFTYiPqv4OgpVrQ0Tbc/VUOBa4zU8x6k6ehUUWV05fBuUKlyVGEogkFoJABFhABmAIHQr
        HxFSMUWNzML2NzHMSIbIZDQfKbu076qKJo+6lkTVxE/bxyOUMLDnZWNLnAZqmVrXEAzBIub3TbMCSc1s
        066k9OgUUV87ejNtVdjn9qN1RxDdAoonh57E1JSXAN9d2yUqVXHdeqLXCRgtsXc8r2SvFE4hDKo96iiD
        GQGo9LPpnUKKLNayaIbPGjmvXHovVF5+sss26TF31OaoWkeYKKJNND2OU+KuiIVa9QO1Cii2xTfDMdyk
        8oCyldFzHkootUSkjLdNshe5XZiCFFF1SsjS3gtUxjiIWe57gZBUUUL05Lzq0MsxII82q8qvAuL914os
        9U0+DQpVLkWOIJNwIUr1GkaR2UUTum5EmEqJTcC2BqrYfHBgyvbI5qKKd05w0UmU8phw6kbyfZRRRJ69
        lPQj4P/Z
</value>
  </data>
</root>